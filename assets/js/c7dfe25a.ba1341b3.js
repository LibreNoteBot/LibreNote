"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[60],{7357:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return r},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var l=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],r={id:"spotify.js"},p=void 0,s={unversionedId:"code/utility/spotify.js",id:"code/utility/spotify.js",isDocsHomePage:!1,title:"spotify.js",description:"spotify",source:"@site/docs/code/utility/spotify.js.md",sourceDirName:"code/utility",slug:"/code/utility/spotify.js",permalink:"/code/utility/spotify.js",editUrl:"https://github.com/librenotebot/librenote/edit/main/docs/docs/code/utility/spotify.js.md",tags:[],version:"current",frontMatter:{id:"spotify.js"},sidebar:"mySidebar",previous:{title:"redis.js",permalink:"/code/utility/redis.js"},next:{title:"track.js",permalink:"/code/utility/track.js"}},u=[{value:"spotify",id:"spotify",children:[{value:"spotify.getSpotifyAccessToken(client, nocache)",id:"spotifygetspotifyaccesstokenclient-nocache",children:[]},{value:"spotify.getYoutubeFromSpotify(client, url) \u21d2 <code>Promise.&lt;string&gt;</code>",id:"spotifygetyoutubefromspotifyclient-url--promisestring",children:[]},{value:"spotify~isTrackURL(URL) \u21d2 <code>boolean</code>",id:"spotifyistrackurlurl--boolean",children:[]},{value:"spotify~isPlaylistURL(URL) \u21d2 <code>boolean</code>",id:"spotifyisplaylisturlurl--boolean",children:[]}]}],k={toc:u};function d(t){var e=t.components,n=(0,a.Z)(t,i);return(0,o.kt)("wrapper",(0,l.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("a",{name:"module_spotify"}),(0,o.kt)("h2",{id:"spotify"},"spotify"),(0,o.kt)("p",null,"Module to handle communication with Spotify APIs"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#module_spotify"},"spotify"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"static"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#module_spotify.getSpotifyAccessToken"},".getSpotifyAccessToken(client, nocache)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#module_spotify.getYoutubeFromSpotify"},".getYoutubeFromSpotify(client, url)")," \u21d2 ",(0,o.kt)("code",null,"Promise.","<","string",">")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"inner"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#module_spotify..isTrackURL"},"~isTrackURL(URL)")," \u21d2 ",(0,o.kt)("code",null,"boolean")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#module_spotify..isPlaylistURL"},"~isPlaylistURL(URL)")," \u21d2 ",(0,o.kt)("code",null,"boolean"))))))),(0,o.kt)("a",{name:"module_spotify.getSpotifyAccessToken"}),(0,o.kt)("h3",{id:"spotifygetspotifyaccesstokenclient-nocache"},"spotify.getSpotifyAccessToken(client, nocache)"),(0,o.kt)("p",null,"Gets a spotify access token, either from Redis or the Spotify API."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Kind"),": static method of ",(0,o.kt)("a",{parentName:"p",href:"#module_spotify"},(0,o.kt)("code",null,"spotify")),"  "),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Param"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"client"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,"object")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("p",null,"Client object from discord.js"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"nocache"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,"boolean")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("p",null,"If true, the cache will be skipped and go straight to the Spotify API"))))),(0,o.kt)("a",{name:"module_spotify.getYoutubeFromSpotify"}),(0,o.kt)("h3",{id:"spotifygetyoutubefromspotifyclient-url--promisestring"},"spotify.getYoutubeFromSpotify(client, url) \u21d2 ",(0,o.kt)("code",null,"Promise.","<","string",">")),(0,o.kt)("p",null,"Searches for a Youtube video based on the Spotify URL input"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Kind"),": static method of ",(0,o.kt)("a",{parentName:"p",href:"#module_spotify"},(0,o.kt)("code",null,"spotify")),(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"Returns"),": ",(0,o.kt)("code",null,"Promise.","<","string",">")," - ",(0,o.kt)("p",null,"Resolves to Youtube video URL"),"  "),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Param"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"client"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,"object")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("p",null,"Client object from discord.js"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"url"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,"string")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("p",null,"Spotify URL"))))),(0,o.kt)("a",{name:"module_spotify..isTrackURL"}),(0,o.kt)("h3",{id:"spotifyistrackurlurl--boolean"},"spotify~isTrackURL(URL) \u21d2 ",(0,o.kt)("code",null,"boolean")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Kind"),": inner method of ",(0,o.kt)("a",{parentName:"p",href:"#module_spotify"},(0,o.kt)("code",null,"spotify")),(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"Returns"),": ",(0,o.kt)("code",null,"boolean")," - ",(0,o.kt)("p",null,"If the URL is a Spotify Track URL or not"),"  "),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Param"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"URL"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,"string")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("p",null,"The URL you want to test"))))),(0,o.kt)("a",{name:"module_spotify..isPlaylistURL"}),(0,o.kt)("h3",{id:"spotifyisplaylisturlurl--boolean"},"spotify~isPlaylistURL(URL) \u21d2 ",(0,o.kt)("code",null,"boolean")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Kind"),": inner method of ",(0,o.kt)("a",{parentName:"p",href:"#module_spotify"},(0,o.kt)("code",null,"spotify")),(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"Returns"),": ",(0,o.kt)("code",null,"boolean")," - ",(0,o.kt)("p",null,"If the URL is a Spotify Playlist URL or not"),"  "),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Param"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"URL"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,"string")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("p",null,"The URL you want to test"))))))}d.isMDXComponent=!0}}]);